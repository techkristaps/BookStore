// <auto-generated />
using BookStore.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookStore.API.Migrations
{
    [DbContext(typeof(BookStoreContext))]
    [Migration("20250927130702_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookStore.API.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Jane Austen"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mark Twain"
                        },
                        new
                        {
                            Id = 3,
                            Name = "George Orwell"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Agatha Christie"
                        },
                        new
                        {
                            Id = 5,
                            Name = "J.K. Rowling"
                        });
                });

            modelBuilder.Entity("BookStore.API.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Title = "Sense and Sensibility"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            Title = "Emma"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            Title = "Adventures of Huckleberry Finn"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 2,
                            Title = "The Adventures of Tom Sawyer"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 2,
                            Title = "A Connecticut Yankee in King Arthur's Court"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 3,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 3,
                            Title = "Animal Farm"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 3,
                            Title = "Homage to Catalonia"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 4,
                            Title = "Murder on the Orient Express"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 4,
                            Title = "The ABC Murders"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 4,
                            Title = "And Then There Were None"
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 5,
                            Title = "Harry Potter and the Sorcerer's Stone"
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 5,
                            Title = "Harry Potter and the Chamber of Secrets"
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 5,
                            Title = "Harry Potter and the Prisoner of Azkaban"
                        });
                });

            modelBuilder.Entity("BookStore.API.Entities.Book", b =>
                {
                    b.HasOne("BookStore.API.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("BookStore.API.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
